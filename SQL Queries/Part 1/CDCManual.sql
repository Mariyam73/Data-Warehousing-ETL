USE Toy_Store_TargetDW;

---- CREATE TABLE TO CAPTURE CHANGES MANUALLY ----
CREATE TABLE [dbo].[DIM_PRODUCT_CT](
	[recordID] [int] IDENTITY(1,1) NOT NULL,
	[table_name] NVARCHAR(100),
	[change_type] NVARCHAR(10),
    [change_time] DATETIME,
    [changed_data] XML
 CONSTRAINT [PK_DIM_PRODUCT_CT] PRIMARY KEY CLUSTERED 
(
	[recordID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, 
ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

-------- CREATE TRIGGER FOR INSERTS
CREATE TRIGGER tr_insert_table
ON DIM_PRODUCT
AFTER INSERT
AS
BEGIN
    INSERT INTO DIM_PRODUCT_CT (table_name, change_type, change_time, changed_data)
    SELECT 'DIM_PRODUCT', 'INSERT', GETDATE(), (SELECT * FROM INSERTED FOR XML AUTO);
END;

INSERT INTO DIM_PRODUCT VALUES('PROD001','Doll', 'Pink Barbie Doll', 'PRCAT001', 'PRTY002', 'Doll', 
'Barbie Doll', 'Import','Products imported');

SELECT * FROM DIM_PRODUCT_CT;

------- CREATE TRIGGER FOR UPDATES
CREATE TRIGGER tr_update_table
ON DIM_PRODUCT
AFTER UPDATE
AS
BEGIN
    INSERT INTO DIM_PRODUCT_CT (table_name, change_type, change_time, changed_data)
    SELECT 'DIM_PRODUCT', 'UPDATE', GETDATE(), (SELECT * FROM INSERTED FOR XML AUTO);
END;

UPDATE DIM_PRODUCT
SET prodCatDesc='Bisque Barbie Doll'
WHERE prodID='PROD001';

SELECT * FROM DIM_PRODUCT_CT;

------- CREATE TRIGGER FOR DELETES
CREATE TRIGGER tr_delete_table
ON DIM_PRODUCT
AFTER DELETE
AS
BEGIN
    INSERT INTO DIM_PRODUCT_CT (table_name, change_type, change_time, changed_data)
    SELECT 'DIM_PRODUCT', 'DELETE', GETDATE(), (SELECT * FROM DELETED FOR XML AUTO);
END;

DELETE FROM DIM_PRODUCT
WHERE prodID='PROD001';

SELECT * FROM DIM_PRODUCT_CT;





